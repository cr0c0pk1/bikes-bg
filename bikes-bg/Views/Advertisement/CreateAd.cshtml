@model CreateAdViewModel

@{ ViewBag.Title = "Create Advertisement"; }

<h1>Create Advertisement</h1>

<div class="row">
    <div class="col-md-7 px-md-5 align-self-start">
        <form method="post" enctype="multipart/form-data">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(x => Model.selectedBikeBrand)
                        @Html.DropDownListFor(x => Model.selectedBikeBrand, new SelectList(Model.bikeBrands, "id", "name"), htmlAttributes: new { @class = "form-control", id = "Brands" })
                        @Html.ValidationMessageFor(x => x.selectedBikeBrand, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(x => Model.selectedBikeModel)
                        @Html.DropDownListFor(x => Model.selectedBikeModel, Enumerable.Empty<SelectListItem>(), htmlAttributes: new { @class = "form-control", @id = "Models" })
                        @Html.ValidationMessageFor(x => x.selectedBikeModel, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(x => Model.selectedBikeCategory)
                        @Html.DropDownListFor(x => Model.selectedBikeCategory, new SelectList(Model.bikeCategories, "id", "name"), htmlAttributes: new { @class = "form-control", @id = "Categories" })
                        @Html.ValidationMessageFor(x => x.selectedBikeCategory, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(x => Model.selectedBikeEngineType)
                        @Html.DropDownListFor(x => Model.selectedBikeEngineType, new SelectList(Model.bikeEngineTypes, "id", "name"), htmlAttributes: new { @class = "form-control", @id = "EngineTypes" })
                        @Html.ValidationMessageFor(x => x.selectedBikeEngineType, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label asp-for="bikeEngineSize"></label>
                        <input asp-for="bikeEngineSize" class="form-control" type="number" />
                        <span asp-validation-for="bikeEngineSize" class="text-danger"></span>
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label asp-for="bikeHorsePower"></label>
                        <input asp-for="bikeHorsePower" class="form-control" type="number" />
                        <span asp-validation-for="bikeHorsePower" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(x => Model.selectedBikeColor)
                        @Html.DropDownListFor(x => Model.selectedBikeColor, new SelectList(Model.bikeColors, "id", "name"), htmlAttributes: new { @class = "form-control", @id = "Colors" })
                        @Html.ValidationMessageFor(x => x.selectedBikeColor, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(x => Model.bikeYear, htmlAttributes: new { @class = "control-label col-md-10" })
                        @Html.DropDownListFor(x => Model.bikeYear, Enumerable.Empty<SelectListItem>(), htmlAttributes: new { @class = "form-control", @id = "ProductionYears" })
                        @Html.ValidationMessageFor(x => x.bikeYear, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(x => Model.selectedRegion)
                        @Html.DropDownListFor(x => Model.selectedRegion, new SelectList(Model.regions, "id", "name"), htmlAttributes: new { @class = "form-control", @id = "Regions" })
                        @Html.ValidationMessageFor(x => x.selectedRegion, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(x => Model.selectedCity)
                        @Html.DropDownListFor(x => Model.selectedCity, Enumerable.Empty<SelectListItem>(), htmlAttributes: new { @class = "form-control", @id = "Cities" })
                        @Html.ValidationMessageFor(x => x.selectedCity, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        <label asp-for="bikeMileage"></label>
                        <input asp-for="bikeMileage" class="form-control" type="number" />
                        <span asp-validation-for="bikeMileage" class="text-danger"></span>
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">
                        <label asp-for="bikePrice"></label>
                        <input asp-for="bikePrice" class="form-control" type="number" />
                        <span asp-validation-for="bikePrice" class="text-danger"></span>
                    </div>

                </div>
            </div>
            <div class="form-group">
                <label asp-for="description"></label>
                <textarea class="form-control" asp-for="description" rows="3"></textarea>
                <span asp-validation-for="description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="photo"></label>
                <div class="custom-file">
                    <input asp-for="photo" class="form-control custom-file-input">
                    <label class="custom-file-label">Choose File...</label>
                </div>
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.custom-file-input').on("change", function () {
                var fileName = $(this).val().split("\\").pop();
                $(this).next('.custom-file-label').html(fileName);
            });
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#Brands").change(function () {
                var selectedBrand = $("#Brands").val();
                $("#Models").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetModels")',
                        dataType: 'json',
                        data: { id: selectedBrand },
                        success: function (mems) {
                            $.each(mems, function (i, member) {
                                console.log(member)
                                $("#Models").append('<option value="'
                                + member.value + '">'
                                + member.text + '</option>');
                            });
                        },
                        error: function (ex) {
                            console.log("error")
                            alert('Failed to retrieve models.' + ex);
                        }
                    });
                    return false;
            })
            $("#Brands").val(0);
        });

        $(document).ready(function () {
            $("#Regions").change(function () {
                var selectedRegion = $("#Regions").val();
                $("#Cities").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetCities")',
                        dataType: 'json',
                        data: { id: selectedRegion },
                        success: function (mems) {
                            $.each(mems, function (i, member) {
                                console.log(member)
                                $("#Cities").append('<option value="'
                                + member.value + '">'
                                + member.text + '</option>');
                            });
                        },
                        error: function (ex) {
                            console.log("error")
                            alert('Failed to retrieve models.' + ex);
                        }
                    });
                    return false;
            })
            $("#Regions").val(0);
        });

        let dateDropdown = document.getElementById('ProductionYears');
        let currentYear = new Date().getFullYear();
        let earliestYear = 1950;
        while (currentYear >= earliestYear) {
            let dateOption = document.createElement('option');
            dateOption.text = currentYear;
            dateOption.value = currentYear;
            dateDropdown.add(dateOption);
            currentYear -= 1;
        }
    </script>
}
